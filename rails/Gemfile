require "yaml"
YAML::ENGINE.yamler= "psych" if defined?(YAML::ENGINE)

source "http://rubygems.org"

#### COMMON
# source "https://gems.railslts.com" do
  gem 'rails', '4.0.13'
  # TODO: remove pinned versions of following block when done with upgrade
  gem 'actionmailer',     '4.0.13', :require => false
  gem 'actionpack',       '4.0.13', :require => false
  gem 'activemodel',      '4.0.13', :require => false
  gem 'activerecord',     '4.0.13', :require => false
  # gem 'activeresource',   '4.0.13', :require => false
  gem 'activesupport',    '4.0.13', :require => false
  gem 'railties',         '4.0.13', :require => false
  # gem 'railslts-version', '4.0.13', :require => false
# end

gem "aasm",                 "~> 2.2.1"
gem "activerecord-import",  "0.28.2"
gem "activerecord-session_store"
gem "acts-as-taggable-on",  "~> 2.4.1"
gem "acts_as_list",         "~> 0.1.6"
gem "arrayfields"
gem 'aws-sdk-v1' # this is the old version of aws and is needed by our old version of paperclip we cannot upgrade paperclip until we have rails up to version 4. This uses the AWS namespace.
# this is the new version of the aws sdk. It uses the Aws namespace. It is currently used
# by a rake task to archive old portals
gem "aws-sdk",              "~> 3"
gem 'axlsx',                "> 2.5"
gem 'calpicker', :git => 'git://github.com/concord-consortium/calpicker', :branch => 'spike-rails4-support'
gem "capistrano",           "~> 2.14.1" #      :require => "capistrano"  #REMOVE? also: Remove associated files
gem 'capistrano-cowboy' #REMOVE?
gem 'coffee-rails',         "~> 4.0.0" # if running rails 3.1 or greater
gem "compass-rails"
gem "compass-blueprint"
gem 'connection_pool' # was sub-dependency of react-rails, needed in test setup code
gem 'daemons',              "~> 1.1.8"  #REMOVE?
gem 'default_value_for',    "~> 2.0.3"
gem 'delayed_job',          "~> 4.1.1"
gem 'delayed_job_active_record', "~> 4.1.0"
gem "delayed_job_web"
gem "devise",               "~> 3.0.0"
gem 'devise-encryptable'
gem 'dynamic_form',         "~> 1.1.4"
gem 'exception_notification', "~> 2.5.2"
gem 'font-awesome-rails'
gem "grit",                 "~> 2.4"  #REMOVE?
gem "haml",                 "~> 4.0"
gem "httparty"
gem 'in_place_editing',      :git => 'git://github.com/concord-consortium/in_place_editing.git'   # gem"in_place_editing",     "~> 1.2.0"
gem 'json',                 "~> 1.8.6"
gem 'jwt'
gem "mysql2",             '~> 0.3.16', :platforms => [:ruby,:mingw]
gem 'nested_form'
gem "net-sftp",             "~> 2.0",   :require => "net/sftp"  #REMOVE?
gem 'newrelic_rpm', '~> 4.4', '>= 4.4.0.336'
gem "nokogiri",             "~> 1.8.0"
gem 'oj', '~> 2.12.14' #REMOVE?
gem 'omniauth'
gem 'omniauth-oauth'                      # For schoology integration.
gem "omniauth-google-oauth2"              # For google login integration.
gem "open4",                "~> 1.0" #REMOVE?
gem "paperclip"
gem "prawn",                "~> 0.12.0" #REMOVE? Also remove associated files
gem 'prawn_rails',          "~> 0.0.6"  #REMOVE?
gem 'protected_attributes'
gem 'prototype-rails', :git => 'git://github.com/concord-consortium/prototype_legacy_helper.git' # This gem now contains the prototype_legacy view helpers, and the prototype helpers.
gem 'pundit'
gem "redcarpet",            "~> 2.1.1"   #REMOVE? if it's hassle. Look for Routes for docs
gem 'rdoc',                 "~> 3.9.4" #REMOVE?
gem "RedCloth",             "~> 4.2.8"  #REMOVE? if it's hassle. Look for Routes for docs
gem 'rollbar'
gem 'rubyzip',              "~> 1.2.2" # currently (2017-06-13) axlsx requires an older version of rubyzip, hopefully this will shortly be remedied
gem 'rush',                 :git => 'git://github.com/concord-consortium/rush'
gem 'sanitize'
gem 'sass', '~> 3.4.0'
gem 'sass-rails' # if running rails 3.1 or greater
# gem 'strong_parameters'  # REMOVE? as part of rails 4.0 upgrade
gem 'sunspot_rails'
gem 'sunspot_solr' # optional pre-packaged Solr distribution TODO remove this, and do something better on production deploy
gem "syntax",               "~> 1.0" #REMOVE?
gem 'rack-cors', :require => 'rack/cors' # cors is allowed for all groups because cors is always enabled for the interactives/export_model_library
gem 'rack-secure_samesite_cookies', :git => 'git://github.com/concord-consortium/secure-samesite-cookies', :tag => 'v1.0.2'
gem 'test-unit',            '~> 3.0'
gem 'themes_for_rails',     :git => 'git://github.com/concord-consortium/themes_for_rails', :branch => 'asset-pipeline-only' # this customization is so the digests or fingerprints are correctly added to the assets even when they are from a theme.'asset-pipeline-only'
gem "tinymce-rails"
gem "turbo-sprockets-rails4"  # needed for setup tasks in production and dev
gem 'uglifier'
gem 'useragent'  # detect browser types # REMOVE? only used in application_controller reject_old_browsers
gem "uuidtools",            "~> 2.1.2"
gem 'virtus',               "~>1.0.3"
gem "will_paginate",        "~> 3.0.0"
gem 'yui-compressor'  #REMOVE?


# see above; for production asset compilation.
# as per http://guides.rubyonrails.org/asset_pipeline.html#precompiling-assets
# when compressing assets without a javascript runtime:
group :production do
  gem 'therubyracer',         "~>0.12.1"
  gem "unicorn"
end

group :development do
  gem "awesome_print"
  gem "better_errors"
  gem "bullet"
  gem "debugger-ruby_core_source", "~> 1.3.8", :platforms => [:mri_19]
  gem "highline"
  gem "hirb"
  gem "interactive_editor"
  gem "lol_dba"
  gem "rack-mini-profiler"
  gem "rake",                 "~> 0.9.2"
  gem 'rb-inotify', :require => false
  gem 'rb-fchange', :require => false
  gem 'rb-fsevent', :require => false
  gem "ruby-debug",   :platforms => [:mri_18, :mingw_18]
  gem "ruby-prof"
  gem "sextant"    # adds http://localhost:9000/rails/routes in dev mode
  gem "spring" # automatic rails application preloader (similar to Spork)
  gem "what_methods"
  gem "wirble"
  # gem 'xray-rails' # shows you what is being rendered in your browser with cmd+shift+x
end

group :test, :cucumber do
  gem "capybara"
  gem "capybara-mechanize"
  gem 'capybara-screenshot'
  gem "ci_reporter"
  gem "connection_pool"    # TODO: should already be loaded?
  gem "cucumber"
  gem "cucumber-rails",                 :require => false
  gem "database_cleaner"
  gem "delorean"
  gem "email_spec"
  gem "json-schema"
  gem "rspec"
  gem "rspec-activemodel-mocks"
  gem "rspec-collection_matchers"
  gem "rspec-rails"
  gem "selenium-webdriver"
  gem "spring-commands-cucumber"
  gem "spring-commands-rspec"
  gem 'webdrivers', '~> 3.0'
  gem "webmock",                        :require => false
end

group :test, :cucumber, :development do
  gem "factory_bot" # this is included in development so the mock data can be loaded into the dev database
  gem "guard"
  gem "guard-cucumber"
  gem "guard-rspec"
  gem "launchy"
  gem "pry"
  gem 'pry-byebug'
  gem "remarkable_activerecord",  "~> 3.1.13", :require => nil
  gem 'simplecov', :require => false
end

# Ideally we pre-compile all asetts and then run production
# with out the asset compiling requirements. But We have dynamic assets
# generated a prototype helper 'calendar_date_picker'
group :assets do
  gem "jquery-fileupload-rails"
end


# Feature enabling groups
group :geniverse_wordpress do
  gem "cc_portal_wordpress_integration", :git => "git://github.com/concord-consortium/cc_portal_wordpress_integration", :branch => 'spikes-rails4-support'
  # gem "cc_portal_wordpress_integration", :path => "../cc_portal_wordpress_integration"
end

group :geniverse_remote_auth do
  gem "cc_portal_remote_auth", :git => "git://github.com/concord-consortium/cc_portal_remote_auth", :branch => "spike-rails4-support"
  # gem "cc_portal_remote_auth", :path => "../cc_portal_remote_auth"
end

group :geniverse_backend do
  gem "geniverse_portal_integration", :git => "git://github.com/concord-consortium/geniverse-portal-integration", :branch => "spike-rails4-support"
  # gem "geniverse_portal_integration", :path => "../geniverse-portal-integration"
end

group :genigames_data do
  gem 'genigames_connector', :git => 'git://github.com/concord-consortium/genigames-connector', :branch => "spike-rails4-support"
  # gem "genigames_connector", :path => "../genigames-connector"
end
