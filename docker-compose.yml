# This file is meant for development, in production we use a slightly different
# configuration
version: '2'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-dev
    command: docker/dev/run.sh
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: xyzzy
      SOLR_HOST: solr
      SOLR_PORT: 8983
      PORTAL_FEATURES:
      SITE_URL:
      RESEARCHER_REPORT_ONLY:
      TEST_SOLR_HOST: solr-test
      TEST_SOLR_PORT: 8981
      SERVICE_API_KEY: unsecure local key
      REPORT_VIEW_URL:
    # no ports are published, see below for details
    volumes:
      - .:/rigse
      - bundle:/bundle
    networks:
      # the portal network allows external connections
      portal:
        aliases:
          - portal
      # app service needs to be on default network too so it can connect to mysql and solr
      default:
  solr:
    image: concordconsortium/docker-solr-portal
    # no ports are published, see below for details
    volumes:
      - .:/rigse
    command: /bin/bash ./start-solr.sh
    environment:
      #
      # Solr ping URL is http://<host>:<port>/solr/<core>/admin/ping
      #
      SOLR_PING_URL: http://localhost:8983/solr/development/admin/ping
      SERVICE_API_KEY: unsecure local key
      SERVICE_API_ENDPOINT: http://app:3000/api/v1/service/sunspot_reindex
  mysql:
    image: mysql:5.6
    environment:
      MYSQL_ROOT_PASSWORD: xyzzy
    command: mysqld --character-set-server=utf8 --collation-server=utf8_general_ci
    volumes:
      # use a named volume here so the database is preserved after a down and up
      - mysql:/var/lib/mysql
  solr-test:
    image: concordconsortium/docker-solr-portal
    environment:
      TEST_SOLR_PORT: 8981
    #
    # Mount the portal source in the container under /rigse
    #
    volumes:
      - .:/rigse
    #
    # Invoke the docker/dev/start-solr-test.sh script allowing us
    # to specify a port and other parameters.
    #
    command: ["/bin/bash", "-c", "/rigse/docker/dev/start-solr-test.sh -f -p $${TEST_SOLR_PORT}" ]

volumes:
  bundle:
  mysql:
networks:
  # create a portal network so other services such as LARA can be part of this network
  # and connect with the web app.
  portal:

# In this file the web app and solr ports are not published. However, if you run
# `docker-compose up` (without customizing your environment) the ports will be published
# to 3000 and 8983.  This is because the docker-compose.override.yml file will be loaded
# automatically by docker-compose.
# You will likely want to modify how the ports are published, so they don't conflict.
# Take a look at the this overlay for more information:
#   docker/dev/docker-compose-random-ports.yml
