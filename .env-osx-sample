# This configuration adds the following overlays:
#
# docker-compose-sync: setup to speed up OSX using unison under the hood
#
# docker-compose-random-ports: export random exported ports, so it doesn't conflict with
#   the portal or other apps running on port 3000
#
# docker-compose-publish-capybara-port.yml: expose the capybara port so a chrome driver
#   running on the host machine can talk to the capaybara server and you can see the UI
#   while the test are running.
#
# docker/dev/docker-compose-graphql.yml: start a graphql back-end server and
#   a react-admin interface for managing administrative tasks
#
COMPOSE_FILE=docker-compose.yml:docker/dev/docker-compose-sync.yml:docker/dev/docker-compose-random-ports.yml:docker/dev/docker-compose-publish-capybara-port.yml:docker/dev/docker-compose-graphql.yml

# The URL for ourselves. This is used when resources are published to the portal.
SITE_URL=http://app.portal.docker

# Enable some extra features provided by external gems
# PORTAL_FEATURES=geniverse_backend

# Run the portal in researcher report mode this is used by the researcher portal
# RESEARCHER_REPORT_ONLY=true
MYSQL_ROOT_PASSWORD=xyzzy

# Configure rails logging levels:
#     DEBUG | INFO | WARN | ERROR | FATAL | UNKNOWN
TEST_LOG_LEVEL=WARN
DEV_LOG_LEVEL=DEBUG
