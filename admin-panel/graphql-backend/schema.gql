# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AdminProject {
  id: ID!
  name: String
  landingPageSlug: String
  landingPageContent: String
  projectCardImageUrl: String
  projectCardDescription: String
  public: Boolean
  users: [User]
}

type AdminProjectUser {
  id: ID
  projectId: ID
  project: AdminProject
  userId: ID
  isAdmin: Boolean
  isResearcher: Boolean
}

input AdminProjectUserFilter {
  userId: ID
}

type listMeta {
  count: Float
}

type Mutation {
  deleteAdminProject(id: String): AdminProject
  createAdminProject(name: String, landingPageSlug: String, projectCardDescription: String, projectCardImageUrl: String, landingPageContent: String, public: Boolean): AdminProject
  updateAdminProject(name: String, landingPageSlug: String, projectCardDescription: String, projectCardImageUrl: String, landingPageContent: String, public: Boolean, id: ID): AdminProject
  updateAdminProjectUser(id: ID, isAdmin: Boolean = false, isResearcher: Boolean = false): AdminProjectUser
  createAdminProjectUser(userId: ID, projectId: ID, isAdmin: Boolean = false, isResearcher: Boolean = false): AdminProjectUser
  deleteAdminProjectUser(id: String): AdminProjectUser
  deleteUser(id: String): User
  createUser(firstName: String, lastName: String, email: String, login: String, projectsIds: [ID]): User
  updateUser(firstName: String, lastName: String, email: String, login: String, projectsIds: [ID], id: ID): User
  deletePortalPermissionForm(id: String): Boolean
  createPortalPermissionForm(name: String, url: String, projectId: ID): PortalPermissionForm
  updatePortalPermissionForm(name: String, url: String, projectId: ID, id: ID): PortalPermissionForm
  updatePortalStudentPermissionForm(id: ID, signed: Boolean = false): PortalStudentPermissionForm
  createPortalStudentPermissionForm(portalStudentId: ID, portalPermissionFormId: ID, signed: Boolean = false): PortalStudentPermissionForm
  deletePortalStudentPermissionForm(id: String): PortalStudentPermissionForm
  deletePortalStudent(id: String): PortalStudent
  createPortalStudent(userId: [ID]): PortalStudent
  updatePortalStudent(userId: [ID], id: ID): PortalStudent
}

input PermissionFilter {
  name: String
}

type PortalPermissionForm {
  id: ID!
  name: String
  url: String
  project: AdminProject
  projectId: ID
}

type PortalStudent {
  id: ID!
  userId: ID
  user: User
  gradeLevelId: ID
}

input PortalStudentFilter {
  id: ID
  userId: ID
}

type PortalStudentPermissionForm {
  permissionForm: PortalPermissionForm
  student: PortalStudent
}

input PortalStudentPermissionFormFilter {
  studentId: ID
  portalPermissionFormId: ID
}

input ProjectFilter {
  name: String
  ids: [ID]
}

type Query {
  allAdminProjects(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: ProjectFilter): [AdminProject]
  _allAdminProjectsMeta(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: ProjectFilter): listMeta
  AdminProject(id: String): AdminProject
  allAdminProjectUsers(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: AdminProjectUserFilter): [AdminProjectUser]
  _allAdminProjectUsersMeta(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: AdminProjectUserFilter): listMeta
  AdminProjectUser(id: String): AdminProjectUser
  allUsers(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: UserFilter): [User]
  _allUsersMeta(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: UserFilter): listMeta
  User(id: String): User
  allPortalPermissionForms(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: PermissionFilter): [PortalPermissionForm]
  _allPortalPermissionFormsMeta(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: PermissionFilter): listMeta
  PortalPermissionForm(id: String): PortalPermissionForm
  allPortalStudentPermissionForms(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: PortalStudentPermissionFormFilter): [PortalStudentPermissionForm]
  _allPortalStudentPermissionFormsMeta(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: PortalStudentPermissionFormFilter): listMeta
  PortalStudentPermissionForm(id: String): PortalStudentPermissionForm
  allPortalStudents(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: PortalStudentFilter): [PortalStudent]
  _allPortalStudentsMeta(page: Float = 0, perPage: Float = 10, sortField: String = "id", sortOrder: String = "ASC", filter: PortalStudentFilter): listMeta
  PortalStudent(id: String): PortalStudent
}

type User {
  id: ID!
  login: String
  projects: [AdminProject]
  firstName: String
  lastName: String
  email: String
  encryptedPassword: String
}

input UserFilter {
  ids: [ID]
  email: String
  lastName: String
  firstName: String
}
