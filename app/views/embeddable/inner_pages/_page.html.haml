- page_elements_container = dom_id_for(page,:elements_container)

- if (for_teacher_only? page)
  - view_class = "action_menu teacher_only"
- else
  - view_class = "action_menu"

      
%div{:id => dom_id_for(page,:item), :class =>view_class}
  .action_menu
    .action_menu_header_left
      .padded_content
        %span.page_name inner page: #{page.name}
    .action_menu_header_right
      - if (page.changeable?(current_visitor))
        = dropdown_button "add.png", :content_id=>dom_id_for(page, :add_menu),:name=> dom_id_for(page, :add_menu), :title => 'add content to this page'
        - delete_url = url_for(:controller => "embeddable/inner_pages", :action => 'delete_page', :id => inner_page.id, :page_id => page.id)
        = remote_link_button "delete.png", :confirm => "Delete the page #{page.name}?", :url => delete_url, :title => "delete #{page.name}"
      - else
        = link_button "disabled.png", "#", :title => "can't add content"
    
  .item_collection
    %ul.menu{:id => page_elements_container}
      - page.page_elements.each_with_index do |element,i|
        = render :partial => 'pages/element_container', :locals => {:element => element, :component => element.embeddable, :page_element => element, :page => page }
      - if (page.changeable?(current_visitor))
        - url = polymorphic_url([:sort_elements, page])
        =sortable_element page_elements_container, :url => url, :handle=> "action_menu", :constraint => :vertical, :scroll => "window"