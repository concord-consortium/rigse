= remote_form_for(multiple_choice, :update => dom_id_for(multiple_choice, :item), :before =>  "tinyMCE.triggerSave(true,true)") do |f|
  = edit_menu_for(multiple_choice, f)
  .content
    / = field_set_tag 'name' do
    /   = f.text_field :name, :id => dom_id_for(multiple_choice, :item, :name_field)
    = field_set_tag 'prompt' do
      = f.text_area :prompt, :id => dom_id_for(multiple_choice, :item, :textarea), :class => 'tinymce_textarea'
    = field_set_tag 'options' do
      .option
        = f.check_box :allow_multiple_selection, :id => dom_id_for(multiple_choice, :item, :allow_multiple_selection)
        %label{:for => dom_id_for(multiple_choice, :item, :allow_multiple_selection)}= "Multiple Selection (checkboxes)"
      .option
        = f.check_box :enable_rationale, :id => dom_id_for(multiple_choice, :item, :enable_rationale)
        %label{:for => dom_id_for(multiple_choice, :item, :enable_rationale)}= "Enable Rationale"
      .option
        %label{:for => dom_id_for(multiple_choice, :item, :rationale_prompt)}= "Rationale Prompt: "
        - multiple_choice.rationale_prompt ||= Embeddable::MultipleChoice.new.rationale_prompt  # is there a better way to get the default value?
        - size = (multiple_choice.rationale_prompt ? multiple_choice.rationale_prompt.size : 35) + 5
        - size = 40 if size < 40
        - size = 80 if size > 80
        = f.text_field :rationale_prompt, :size => size, :id => dom_id_for(multiple_choice, :item, :rationale_prompt)
      
    %fieldset{:id => dom_id_for(multiple_choice, :edit_choices)}
      %legend 
        choices
      .action_menu
        .action_menu_header_right
          %ul
            %li= link_to_remote "add choice", :url => add_choice_embeddable_multiple_choice_url(multiple_choice)
      #choices
        = f.fields_for :choices do |choice_form|
          = render :partial => "edit_choice", :locals => {:multiple_choice => multiple_choice, :form => choice_form}
