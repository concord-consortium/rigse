%OTViewBundle{ :showLeftPanel => 'false', :currentMode => current_mode, :local_id => "view_bundle" }
  %frame
    %OTFrame{ :useScrollPane => use_scroll_pane, :width => body_width + left_nav_panel_width, :height => height, :title => h(title) }
  %modes
    %OTViewMode{:name => "student"}      
    - if authoring
      %OTViewMode{:name => "authoring"}
        %map
          - authoring_view_entries.each do |view_entry|
            %entry{:key => '${' + view_entry[0] + '}'}
              %OTViewEntry{ :objectClass => view_entry[1], :viewClass => view_entry[2] }
          %entry{:key => '${document_view_config}'}
            = render :partial => "otml/ot_authoring_document_view_config"

  %views
    %OTChoiceViewConfig{:objectClass => "org.concord.otrunk.ui.OTChoice", :viewClass => "org.concord.otrunk.ui.swing.OTChoiceView"}
      %radioButtonViewEntry
        %OTChoiceViewConfig{:objectClass => "org.concord.otrunk.ui.OTChoice", :viewClass => "org.concord.otrunk.ui.swing.OTChoiceRadioButtonView",  :useViewsAsChoices => "true"}
      %checkBoxViewEntry
        %OTChoiceViewConfig{:objectClass => "org.concord.otrunk.ui.OTChoice", :viewClass => "org.concord.otrunk.ui.swing.OTChoiceCheckBoxView",  :useViewsAsChoices => "true"}
    - view_entries.each do |view_entry|
      %OTViewEntry{ :local_id => ot_local_id_for(view_entry[0]), :objectClass => view_entry[1], :viewClass => view_entry[2] }/
    %OTDocumentViewConfig{ :local_id => "document_view_config", :objectClass => 'org.concord.otrunk.view.document.OTDocument', :viewClass => 'org.concord.otrunk.view.document.OTDocumentView' }
      %cssBlocks
        %OTCssText{ :local_id => ot_local_id_for('otml_css'), :src => otml_css_path }/
        - if current_project.using_custom_css?
          %OTCssText{ :local_id => ot_local_id_for('project_css'), :src => otml_project_css_path }/
