- if @additional_partials && @additional_partials.length > 0
  - @additional_partials.each do |p|
    = render :partial => p, :locals => { :admin_settings => admin_settings, :f => f }
- if @manager_role
  = render :partial => "form_for_managers", :locals => { :admin_settings => admin_settings, :f => f  }
- else
  .item
    = edit_menu_for(admin_settings, f, { :omit_cancel => true })
    .content
      %p
        %ul.menu_v
          %li
            = f.label :active, "Mark these settings as active:", :style => "display:inline;"
            = f.check_box :active
            %br
            (The first settings marked active will be used for the portal settings.)
          %li
            Enable Student Security Questions:
            = f.check_box :use_student_security_questions
            %br
            (This option will allow students to reset their own passwords.)
          %li
            = f.label :allow_default_class, "Enable Default Class:", :style => "display:inline;"
            = f.check_box :allow_default_class
            %br
            (This option will allow students to reset their own passwords.)
          %li
            = f.label :default_cohort_id,  "Default Cohort:"
            = f.collection_select(:default_cohort_id, Admin::Cohort.all, :id, :fullname, {include_blank: 'none'})
            %br
            (New teachers will be automatically added to the selected cohort.)
          %li
            = f.label :enable_grade_levels, "Enable Grade Levels for Classes:", :style => "display:inline;"
            = f.check_box :enable_grade_levels
            %br
            (This option will allow teachers to select grade levels during class creation.)
          %li
            = f.label :use_bitmap_snapshots, "Use Bitmaps in Labbook Exclusively:", :style => "display:inline;"
            = f.check_box :use_bitmap_snapshots
            %br
            (This option insures that all labbook entries are treated like simple images.)
          %li
            = f.label :teachers_can_author, "Teachers can author:", :style => "display:inline;"
            = f.check_box :teachers_can_author
            %br
            (This option changes whether or not teachers are considered authors by default.)
          %li
            = f.label :allow_adhoc_schools, "Teachers can create schools:", :style => "display:inline;"
            = f.check_box :allow_adhoc_schools
            %br
            (This option changes whether or not teachers can create schools)
          %li
            = f.label :require_user_consent, "Require Users Consent:", :style => "display:inline;"
            = f.check_box :require_user_consent
            %br
            (This option changes whether or not users will be asked for consent to use their data)
          %li
            = f.label :use_periodic_bundle_uploading, "Use Periodic Bundle Uploading:", :style => "display:inline;"
            = f.check_box :use_periodic_bundle_uploading
            %br
            (This option changes whether student data will be uploaded in chunks at intervals throughout the session, or in one large chunk at the end of the session)
          %li
            = f.label :pub_interval, "PUB Interval seconds:", :style => "display:inline;"
            = f.text_field :pub_interval, :size=>4
            %br
            ([ minimum value: #{Admin::Settings::MinPubInterval} ] This option changes whether student data will be uploaded in chunks at intervals throughout the session, or in one large chunk at the end of the session)
          %li
            = f.label :include_external_activities, "Include External Activities in class materials search:", :style => "display:inline;"
            = f.check_box :include_external_activities
            %br
            (This option changes whether or not External Activities will appear in the class materials search)
          %li
            = f.label :anonymous_can_browse_materials, "Anonymous can search instructional materials:", :style => "display:inline;"
            = f.check_box :anonymous_can_browse_materials
            %br
            (This option changes whether or not Search will appear in the nav bar for anonymous users.)
          %li
            = f.label :show_collections_menu, "Show Collections Menu:", :style => "display:inline;"
            = f.check_box :show_collections_menu

          %li
            = f.label :enable_social_media, "Enable social media sharing", :style => "display:inline;"
            = f.check_box :enable_social_media

          %li
            = f.label :auto_set_teachers_as_authors, "Auto set teachers as authors:", :style => "display:inline;"
            = f.check_box :auto_set_teachers_as_authors

          %li
            = f.label :custom_search_path, "Custom Search Path:", :style => "display:inline;"
            = f.text_field :custom_search_path
            %br
            (If this field contains any value, 'search' links will take users to the path specified. Defaults to '/search'.)
          %li
            = f.label :teacher_home_path, "Custom teacher home path:", :style => "display:inline;"
            = f.text_field :teacher_home_path
            %br
            (If this field contains a value, teachers will be directed from the root path '/' to the
            specified path. Defaults to no redirection. A common value is "/getting_started".)
          %li
            = f.label :enabled_bookmark_types,  "Enabled bookmark types"
            = f.select(:enabled_bookmark_types, admin_settings.available_bookmark_types.map { |b| [b,b]}, {},{ :class => ".chzn-select", :multiple => true})
          = content_for "admin_settings_form_#{admin_settings.id || 'new'}"
      = field_set_tag '<b>Jnlp</b>'.html_safe do
        %p
          Jnlp URL:
          = f.text_field :jnlp_url, :size => 60
        %p
          Jnlp CDN Hostname:
          = f.text_field :jnlp_cdn_hostname, :size => 60

      %p
        %b
          Description
        = f.text_area :description, :id => dom_id_for(admin_settings, :item, :textarea), :class => 'tinymce_textarea'
      %p
        = render :partial => "home_page_content_field", :locals => { :admin_settings => admin_settings, :f => f }
      %p
        = render :partial => "help_page_item", :locals => { :admin_settings => admin_settings, :f => f }
      %p
        = render :partial => "custom_css_field", :locals => { :admin_settings => admin_settings, :f => f }
      = field_set_tag '<b>Vendor Interfaces</b>' do
        - Probe::VendorInterface.all.each do |interface|
          - domid = interface.name.gsub(/\s+/,"_")
          = check_box_tag "admin_settings[enabled_vendor_interface_ids][]", "#{interface.id}", admin_settings.enabled_vendor_interfaces.include?(interface), :id=>domid
          %label{:for => domid}= interface.name_with_driver
          %br
      :javascript
        new Chosen($('admin_settings_enabled_bookmark_types'));
