%script
  helpLink = $('help')
  - if admin_project.help_type == 'no help'
    helpLink.parentNode.style.display = "none"
  - else
    helpLink.href = "javascript: void(0)"
    helpLink.onclick = function(){window.open('/help/index','help_page','height = 700 width = 800')}
    helpLink.parentNode.style.display = ""
- if @manager_role
  = render :partial => 'show_for_managers', :locals => { :admin_project => admin_project }
- else
  - options = { :complete => mce_init_string, :omit_delete => true }
  %div{ :id => dom_id_for(admin_project), :class => "container_element" }
    = show_menu_for(admin_project, options)

    %div{:id => dom_id_for(admin_project, :item), :class => 'item'}
      %div{:id => dom_id_for(admin_project, :details), :class => 'content'}
        = wrap_edit_link_around_content(admin_project, options={:complete => mce_init_string}) do
          %h4= h(admin_project.name)
          %p
            %ul.menu_v
              %li
                Project Active:
                %b
                  - if admin_project.active
                    Yes
                  - else
                    No
                (This option determines is this project is used for project settings.)
              %li
                Student Security Questions:
                %b
                  - if admin_project.use_student_security_questions
                    enabled.
                  - else
                    disabled.
                (This option will allow students to reset their own passwords.)
              %li
                Default Class:
                %b
                  - if admin_project.allow_default_class
                    enabled.
                  - else
                    disabled.
                (This option will allow students to register without a class word.)
              %li
                Grade Levels for Classes:
                %b
                  - if admin_project.enable_grade_levels?
                    enabled.
                  - else
                    disabled.
                (This option will allow teachers to select grade levels during class creation.)
              %li
                Use Bitmaps in Labbook Exclusively:
                %b
                  - if admin_project.use_bitmap_snapshots?
                    Yes
                  - else
                    No
                (This option insures that all labbook entries are treated like simple images.)
              %li
                Teachers can author:
                - if admin_project.teachers_can_author?
                  %b
                    Yes
                  (Teachers are considered authors by default.)
                - else
                  %b
                    No
                  (Teachers are not considered authors by default and can only author when given the "author" role.)
              %li
                Use JavaClientLauncher:
                - if admin_project.opportunistic_installer?
                  %b
                    Yes
                  (The launcher will use an existing installation or automatically install the necessary jars if no installation is found.)
                - else
                  %b
                    No
                  (The launcher will use the configured jnlp directly, and launch via Java WebStart.)

              %li
                Teachers can create schools:
                - if admin_project.allow_adhoc_schools?
                  %b
                    Yes
                  (Teachers can create their own schools when registering.)
                - else
                  %b
                    No
                  (Teachers must choose their school from a list when registering.)
              %li
                Ask users to sign
                consent form:
                - if admin_project.require_user_consent?
                  %b
                    Yes
                  (Users will be asked for consent to use their data in reports.)
                - else
                  %b
                    No
                  (Users will not be asked for consent to use their data in reports.)
              %li
                Use periodic bundle uploading:
                - if admin_project.use_periodic_bundle_uploading?
                  %b
                    Yes
                  (User data will be uploaded in smaller chunks at intervals throughout the session.)
                - else
                  %b
                    No
                  (User data will be uploaded in one large chunk at the end of the session.)
              %li
                Include External Activities in class materials search:
                - if admin_project.include_external_activities?
                  %b
                    Yes
                  (External Activities will appear in the materials search, and be assignable to classes.)
                - else
                  %b
                    No
                  (External Activities will not appear in the materials search.)
              %li
                Enabled Bookmark Types:
                = admin_project.enabled_bookmark_types.join(', ')

            = field_set_tag 'Maven Jnlp' do
              %p
                Jnlp CDN Hostname:
                = admin_project.jnlp_cdn_hostname
            = field_set_tag 'Project Description' do
              %p= admin_project.description.html_safe
            - home_page_content = admin_project.home_page_content
            - unless home_page_content.nil?
              %input{:type=>"button", :value=>"Preview Home Page", :onclick=>"preview_home_page(null, '#{ERB::Util.url_encode(home_page_content)}');", :class=>"button", :style=>"margin-top: 10px; font-size: 13px"}
            %br
            - case admin_project.help_type
            - when 'external url'
              - external_url = admin_project.external_url
              %input{:type=>"button", :value=>"Preview External Help URL" ,:onclick =>"window.open('#{external_url}','HelpPage','height = 700 width = 800, resizable = yes, scrollbars = yes')" ,:class=>"button" , :style=>"margin-top: 10px; font-size: 13px"}
            - when 'help custom html'
              - project_id = admin_project.id
              - project_id =  project_id.to_s
              %input{:type=>"button", :value=>"Preview Custom Help Page" ,:onclick =>"openPreviewHelpPage(false,'',false,'#{project_id}')" ,:class=>"button" , :style=>"margin-top: 10px; font-size: 13px"}
            - when 'no help'
              %br
              %b
                No Help Page
            %br
            %br
            = render :partial => 'custom_css', :locals => { :admin_project => admin_project }
