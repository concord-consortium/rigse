- if @manager_role
  = render :partial => "form_for_managers", :locals => { :admin_project => admin_project, :f => f  }
- else
  .item
    = edit_menu_for(admin_project, f, { :omit_cancel => true })
    .content
      %p
        %ul.menu_v
          %li
            %b
            = f.label :active, "Mark this project as active:", :style => "display:inline;"
            = f.check_box :active
            %br
            (The first project marked active will be used for the portal settings.)
          %li
            %b
              Enable Student Security Questions:
            = f.check_box :use_student_security_questions
            %br
            (This option will allow students to reset their own passwords.)
          %li
            %b
            = f.label :allow_default_class, "Enable Default Class:", :style => "display:inline;"
            = f.check_box :allow_default_class
            %br
            (This option will allow students to reset their own passwords.)
          %li
            %b
            = f.label :enable_grade_levels, "Enable Grade Levels for Classes:", :style => "display:inline;"
            = f.check_box :enable_grade_levels
            %br
            (This option will allow teachers to select grade levels during class creation.)
          %li
            %b
            = f.label :use_bitmap_snapshots, "Use Bitmaps in Labbook Exclusively:", :style => "display:inline;"
            = f.check_box :use_bitmap_snapshots
            %br
            (This option insures that all labbook entries are treated like simple images.)
          %li
            %b
            = f.label :teachers_can_author, "Teachers can author:", :style => "display:inline;"
            = f.check_box :teachers_can_author
            %br
            (This option changes whether or not teachers are considered authors by default.)
          %li
            %b
            = f.label :opportunistic_installer, "Use JavaClientLauncher:", :style => "display:inline;"
            = f.check_box :opportunistic_installer
            %br
            (This option changes the boot up process to use an existing installation or automatically install the necessary jars if no installation is found.)
          %li
            %b
            = f.label :allow_adhoc_schools, "Teachers can create schools:", :style => "display:inline;"
            = f.check_box :allow_adhoc_schools
            %br
            (This option changes whether or not teachers can create schools)
          %li
            %b
            = f.label :require_user_consent, "Require Users Consent:", :style => "display:inline;"
            = f.check_box :require_user_consent
            %br
            (This option changes whether or not users will be asked for consent to use their data)
          %li
            %b
            = f.label :use_periodic_bundle_uploading, "Use Periodic Bundle Uploading:", :style => "display:inline;"
            = f.check_box :use_periodic_bundle_uploading
            %br
            (This option changes whether student data will be uploaded in chunks at intervals throughout the session, or in one large chunk at the end of the session)
          %li
            %b
            = f.label :include_external_activities, "Include External Activities in class materials search:", :style => "display:inline;"
            = f.check_box :include_external_activities
            %br
            (This option changes whether or not External Activities will appear in the class materials search)
          %li
            %b
              = f.label :enabled_bookmark_types,  "Enabled bookmark types"
            = f.select(:enabled_bookmark_types, admin_project.available_bookmark_types.map { |b| [b,b]}, {},{ :class => ".chzn-select", :multiple => true})
          %li
            Jnlp CDN Hostname:
            = f.text_field :jnlp_cdn_hostname, :size => 60

      %p
        %b
          Description
        = f.text_area :description, :id => dom_id_for(admin_project, :item, :textarea), :class => 'tinymce_textarea'
      %p
        = render :partial => "home_page_content_field", :locals => { :admin_project => admin_project, :f => f }
      %p
        = render :partial => "help_page_item", :locals => { :admin_project => admin_project, :f => f }
      %p
        = render :partial => "custom_css_field", :locals => { :admin_project => admin_project, :f => f }
      = field_set_tag '<b>Vendor Interfaces</b>' do
        - Probe::VendorInterface.all.each do |interface|
          - domid = interface.name.gsub(/\s+/,"_")
          = check_box_tag "admin_project[enabled_vendor_interface_ids][]", "#{interface.id}", admin_project.enabled_vendor_interfaces.include?(interface), :id=>domid
          %label{:for => domid}= interface.name_with_driver
          %br
      :javascript
        new Chosen($('admin_project_enabled_bookmark_types'));