# This configuration adds the following overlays:
#
# docker-gh-codespaces: GitHub Codespaces settings (eg port 3000 exposed)
#
# docker-compose-publish-capybara-port.yml: expose the capybara port so a chrome driver
#   running on the host machine can talk to the capaybara server and you can see the UI
#   while the test are running.
#
# docker/dev/docker-compose-graphql.yml: start a graphql back-end server and
#   a react-admin interface for managing administrative tasks
COMPOSE_FILE=docker-compose.yml:docker/dev/docker-compose-gh-codespaces.yml:docker/dev/docker-compose-publish-capybara-port.yml:docker/dev/docker-compose-graphql.yml:docker/dev/docker-compose-lara-proxy.yml

# The URL for ourselves. This is used when resources are published to the portal.
# SITE_URL in docker-compose will be constructed from PORTAL_HOST and PORTAL_PROTOCOL.
# The PORTAL_HOST variable is also used to set VIRTUAL_HOST variable. GitHub Codespaces will assign a random
# host name that can be obtained after the port is made public in the Visual Studio Code "Ports" tab.
#
# For automation PORTAL_HOST should be learn.dev.docker and PORTAL_PROTOCOL should be https.
PORTAL_HOST=[PORTAL-RANDOM-GH-CODESPACES-HOST]].githubpreview.dev
PORTAL_PROTOCOL=https

# GitHub Codespaces will assign a random host name that can be obtained after the port is made public
# in the Visual Studio Code "Ports" tab.
LARA_HOST=[LARA-RANDOM-GH-CODESPACES-HOST].githubpreview.dev

# Run the portal in researcher report mode this is used by the researcher portal
# RESEARCHER_REPORT_ONLY=true
MYSQL_ROOT_PASSWORD=xyzzy

# Sets the secret used to generate the portal JWT tokens in lib/signed_jwt.rb
JWT_HMAC_SECRET=XXXX

# Configure rails logging levels:
#     DEBUG | INFO | WARN | ERROR | FATAL | UNKNOWN
TEST_LOG_LEVEL=WARN
DEV_LOG_LEVEL=DEBUG
